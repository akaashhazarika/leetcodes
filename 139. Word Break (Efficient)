139. Word Break
Medium

2284

123

Favorite

Share
Given a non-empty string s and a dictionary wordDict containing a list of non-empty words, determine if s can be segmented into a space-separated sequence of one or more dictionary words.

Note:

The same word in the dictionary may be reused multiple times in the segmentation.
You may assume the dictionary does not contain duplicate words.
Example 1:

Input: s = "leetcode", wordDict = ["leet", "code"]
Output: true
Explanation: Return true because "leetcode" can be segmented as "leet code".
Example 2:

Input: s = "applepenapple", wordDict = ["apple", "pen"]
Output: true
Explanation: Return true because "applepenapple" can be segmented as "apple pen apple".
             Note that you are allowed to reuse a dictionary word.
Example 3:

Input: s = "catsandog", wordDict = ["cats", "dog", "sand", "and", "cat"]
Output: false



class Solution:
    def wordBreak(self, s: str, wordDict: List[str]) -> bool:
        memo={}
        def helper(index):
            if index==len(s):
                return True
            if index not in memo:
                for word in wordDict:
                    if s[index:].find(word)==0:
                        res= helper(index+len(word))
                        if res:
                            memo[index]=True
                            return True
                memo[index]=False
                return False
            else:
                return memo[index]
        
        return helper(0)
