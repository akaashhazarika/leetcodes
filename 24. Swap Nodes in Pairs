24. Swap Nodes in Pairs
Medium

1335

118

Favorite

Share
Given a linked list, swap every two adjacent nodes and return its head.

You may not modify the values in the list's nodes, only nodes itself may be changed.

 

Example:

Given 1->2->3->4, you should return the list as 2->1->4->3.


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def swapPairs(self, head: ListNode) -> ListNode:
        dummy = ListNode(-1)
        curr = dummy
        curr.next = head
        while curr.next and curr.next.next:
            a = curr.next
            b = curr.next.next
            a.next,b.next,curr.next = b.next,a,b
            curr = a
        return dummy.next
