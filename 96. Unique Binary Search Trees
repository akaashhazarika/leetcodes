96. Unique Binary Search Trees
Medium

1837

71

Favorite

Share
Given n, how many structurally unique BST's (binary search trees) that store values 1 ... n?

Example:

Input: 3
Output: 5
Explanation:
Given n = 3, there are a total of 5 unique BST's:

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
   
   
   
   class Solution(object):
    def numTrees(self, n):
        """
        :type n: int
        :rtype: int
        """
        #catlan No:: Keep in mind of that.
        Trees = [0]*(n+1)
        Trees[0]=1
        Trees[1]=1
        for i in range(2,n+1):
            for j in range(1,i+1):
                Trees[i]+=Trees[j-1]*Trees[i-j]
        return Trees[n]
