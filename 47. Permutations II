47. Permutations II
Medium

1163

46

Favorite

Share
Given a collection of numbers that might contain duplicates, return all possible unique permutations.

Example:

Input: [1,1,2]
Output:
[
  [1,1,2],
  [1,2,1],
  [2,1,1]
]


import collections
class Solution:
    def permuteUnique(self, nums: List[int]) -> List[List[int]]:
        res = []
        def helper(index,path,c):
            if index==len(nums):
                res.append(path[:])
            else:
                for value in c:
                    if c[value]>=1:
                        c[value]-=1
                        helper(index+1,path+[value],c)
                        c[value]+=1
        
        helper(0,[],collections.Counter(nums))
        return res
