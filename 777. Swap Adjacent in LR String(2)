777. Swap Adjacent in LR String
Medium

527

514

Add to List

Share
In a string composed of 'L', 'R', and 'X' characters, like "RXXLRXRXL", a move consists of either replacing one occurrence of "XL" with "LX", or replacing one occurrence of "RX" with "XR". Given the starting string start and the ending string end, return True if and only if there exists a sequence of moves to transform one string to the other.

 

Example 1:

Input: start = "RXXLRXRXL", end = "XRLXXRRLX"
Output: true
Explanation: We can transform start to end following these steps:
RXXLRXRXL ->
XRXLRXRXL ->
XRLXRXRXL ->
XRLXXRRXL ->
XRLXXRRLX
Example 2:

Input: start = "X", end = "L"
Output: false
Example 3:

Input: start = "LLR", end = "RRL"
Output: false
Example 4:


class Solution:
    def canTransform(self, start: str, end: str) -> bool:
        if start.replace('X','')!=end.replace('X',''):
            return False
        l_first = 0
        l_second = 0
        r_first = 0
        r_second = 0
        for a,b in zip(start,end):
            if a=='L':
                l_first+=1
            if a=='R':
                r_first+=1
            if b=='L':
                l_second+=1
            if b=='R':
                r_second+=1
            if l_first>l_second or r_second>r_first:
                return False
    
        return l_first==l_second and r_second==r_first

Input: start = "XL", end = "LX"
Output: true
Example 5:

Input: start = "XLLR", end = "LXLX"
Output: false
 

Constraints:

1 <= start.length <= 104
start.length == end.length
Both start and end will only consist of characters in 'L', 'R', and 'X'.
