767. Reorganize String
Medium

643

33

Favorite

Share
Given a string S, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.

If possible, output any possible result.  If not possible, return the empty string.

Example 1:

Input: S = "aab"
Output: "aba"
Example 2:

Input: S = "aaab"
Output: ""
Note:

S will consist of lowercase letters and have length in range [1, 500].
 
 
 
 from collections import Counter
class Solution:
    def reorganizeString(self, S: str) -> str:
        c = Counter(S)
        res = []
        for key,value in c.items():
            res.append([-value,key])
        heapq.heapify(res)
        result = ""
        next_count,next_char = 0,''
        ANS = ''
        while res:
            value,curr = heapq.heappop(res)
            ANS+=curr
            if next_count<0:
                heapq.heappush(res,[next_count,next_char])
            next_count,next_char = value+1,curr
        if len(ANS)!=len(S):
            return ''
        else:
            return ANS
