229. Majority Element II
Medium

1092

126

Favorite

Share
Given an integer array of size n, find all elements that appear more than âŒŠ n/3 âŒ‹ times.

Note: The algorithm should run in linear time and in O(1) space.

Example 1:

Input: [3,2,3]
Output: [3]
Example 2:

Input: [1,1,1,3,3,2,2,2]
Output: [1,2]


class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        mapp = dict()
        for num in nums:
            mapp[num] = mapp.get(num,0)+1
            if len(mapp)==3:
                for key in list(mapp.keys()):
                    mapp[key]-=1
                    if mapp[key]==0:
                        del mapp[key]
        results = []
        for key in mapp.keys():
            if nums.count(key)>len(nums)//3:
                results+=key,
        return results
