91. Decode Ways
Medium

1466

1695

Favorite

Share
A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given a non-empty string containing only digits, determine the total number of ways to decode it.

Example 1:

Input: "12"
Output: 2
Explanation: It could be decoded as "AB" (1 2) or "L" (12).
Example 2:

Input: "226"
Output: 3
Explanation: It could be decoded as "BZ" (2 26), "VF" (22 6), or "BBF" (2 2 6).




class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        curr = [0]*len(s)+[0]                   
        curr[0] = 1
        if not s or s[0]=='0':
            return 0
        for i in range(len(s)):
            curr[i+1] = curr[i]
            if i>0:
                if s[i]=='0':
                    if s[i-1]=='1' or s[i-1]=='2':
                        curr[i+1]=curr[i-1]
                        continue
                    else:
                        return 0
                if s[i-1]=='1':
                    curr[i+1]+=curr[i-1]
                elif s[i-1]=='2':
                    if s[i]>'0' and s[i]<='6':
                        curr[i+1]+=curr[i-1]
        return curr[-1]
