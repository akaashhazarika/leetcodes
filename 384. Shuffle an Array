384. Shuffle an Array
Medium

344

785

Favorite

Share
Shuffle a set of numbers without duplicates.

Example:

// Init an array with set 1, 2, and 3.
int[] nums = {1,2,3};
Solution solution = new Solution(nums);

// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.
solution.shuffle();

// Resets the array back to its original configuration [1,2,3].
solution.reset();

// Returns the random shuffling of array [1,2,3].
solution.shuffle();



import random
class Solution:

    def __init__(self, nums: List[int]):
        self.array = list(nums)
        self.curr = list(nums)
        
    def reset(self) -> List[int]:
        """
        Resets the array to its original configuration and return it.
        """
        self.curr = list(self.array)
        return self.curr
        

    def shuffle(self) -> List[int]:
        """
        Returns a random shuffling of the array.
        """
        for i in range(0,len(self.curr)-1):
            index = random.randint(i,len(self.curr)-1)
            self.curr[index],self.curr[i] = self.curr[i],self.curr[index]
        
        return self.curr
        


# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.reset()
# param_2 = obj.shuffle()
