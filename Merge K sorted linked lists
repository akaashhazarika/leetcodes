Merge k Sorted Lists
  Go to Discuss
Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

Example:

Input:
[
  1->4->5,
  1->3->4,
  2->6
]
Output: 1->1->2->3->4->4->5->6


# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None
from Queue import PriorityQueue
class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        q=PriorityQueue()
        dummy=ListNode(None)
        curr=dummy
        for i in lists:
            if i:
                q.put((i.val,i))
        
        while q.qsize():
            v=q.get()[-1]
            curr.next=v
            curr=curr.next
            if curr.next:
                q.put((curr.next.val,curr.next))
        
        
        return dummy.next
        
