311. Sparse Matrix Multiplication
Medium

635

247

Add to List

Share
Given two sparse matrices mat1 of size m x k and mat2 of size k x n, return the result of mat1 x mat2. You may assume that multiplication is always possible.

 

Example 1:


Input: mat1 = [[1,0,0],[-1,0,3]], mat2 = [[7,0,0],[0,0,0],[0,0,1]]
Output: [[7,0,0],[-7,0,3]]
Example 2:

Input: mat1 = [[0]], mat2 = [[0]]
Output: [[0]]
 

Constraints:

m == mat1.length
k == mat1[i].length == mat2.length
n == mat2[i].length
1 <= m, n, k <= 100
-100 <= mat1[i][j], mat2[i][j] <= 100



class Solution:
    def multiply(self, mat1: List[List[int]], mat2: List[List[int]]) -> List[List[int]]:
        mapp1 = dict()
        mapp2 = dict()
        for index in range(len(mat1)):
            for index2 in range(len(mat1[0])):
                if mat1[index][index2]:
                    mapp1[index] = mapp1.get(index,[])+[(index2,mat1[index][index2])]
                    
        for col in range(len(mat2[0])):
            for row in range(len(mat2)):
                if mat2[row][col]:
                    mapp2[col] = mapp2.get(col,[]) + [(row,mat2[row][col])]
                    
        result = [[0 for _ in range(len(mat2[0]))] for _ in range(len(mat1))]
        
        for i in range(len(result)):
            for j in range(len(result[0])):
                for cols in mapp1.get(i,[]):
                    for rows in mapp2.get(j,[]):
                        if cols[0]==rows[0]:
                            result[i][j] = result[i][j]+cols[1]*rows[1]
        
        return result
