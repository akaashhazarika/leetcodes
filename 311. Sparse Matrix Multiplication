311. Sparse Matrix Multiplication
Medium

281

121

Favorite

Share
Given two sparse matrices A and B, return the result of AB.

You may assume that A's column number is equal to B's row number.

Example:

Input:

A = [
  [ 1, 0, 0],
  [-1, 0, 3]
]

B = [
  [ 7, 0, 0 ],
  [ 0, 0, 0 ],
  [ 0, 0, 1 ]
]

Output:

     |  1 0 0 |   | 7 0 0 |   |  7 0 0 |
AB = | -1 0 3 | x | 0 0 0 | = | -7 0 3 |
                  | 0 0 1 |
Accepted



import collections
class Solution(object):
    def multiply(self, A, B):
        """
        :type A: List[List[int]]
        :type B: List[List[int]]
        :rtype: List[List[int]]
        """
        rows,cols=len(A),len(B[0])
        A_len=len(A[0])
        table1=collections.defaultdict(dict)
        table2=collections.defaultdict(dict)
        dp =[[0]*cols for i in range(rows)]
        for i,j in enumerate(A):
            for k,l in enumerate(A[0]):
                if l:
                    table1[i][k]=l
        for i,j in enumerate(A):
            for k,l in enumerate(A[0]):
                if l:
                    table2[i][k]=l
        for row in table1:
            for k in table1[row]:
                if k not in table2: continue
                for j in table2[k]:
                    dp[row][j]+=(table1[row][k]*table2[k][j])
        return dp
        
