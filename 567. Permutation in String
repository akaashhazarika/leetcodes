567. Permutation in String
Medium

723

38

Favorite

Share
Given two strings s1 and s2, write a function to return true if s2 contains the permutation of s1. In other words, one of the first string's permutations is the substring of the second string.

 

Example 1:

Input: s1 = "ab" s2 = "eidbaooo"
Output: True
Explanation: s2 contains one permutation of s1 ("ba").
Example 2:

Input:s1= "ab" s2 = "eidboaoo"
Output: False
 

Note:

The input strings only contain lower case letters.
The length of both given strings is in range [1, 10,000].



from collections import Counter
import collections
class Solution(object):
    def checkInclusion(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        c1= Counter(s1)
        c2 =  collections.defaultdict(int)
        start = 0
        for index,value in enumerate(s2):
            c2[value]+=1
            if index-start+1==len(s1):
                if c2==c1:
                    return True
                c2[s2[start]]-=1
                if c2[s2[start]]==0:
                    del c2[s2[start]]
                start+=1
        return False
