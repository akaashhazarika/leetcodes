91. Decode Ways
Medium

1796

2036

Favorite

Share
A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given a non-empty string containing only digits, determine the total number of ways to decode it.

Example 1:

Input: "12"
Output: 2
Explanation: It could be decoded as "AB" (1 2) or "L" (12).
Example 2:

Input: "226"
Output: 3
Explanation: It could be decoded as "BZ" (2 26), "VF" (22 6), or "BBF" (2 2 6).



class Solution:
    def numDecodings(self, s: str) -> int:
        if not s or s[0]=='0':
            return 0
        n = len(s)
        dp = [1]*(n+1)
        for i,v in enumerate(s):
            dp[i+1] = dp[i]
            if i>=1:
                if v=='0':
                    if s[i-1] not in "12":
                        return 0
                    else:
                        dp[i+1] = dp[i-1]
                else:
                    if s[i-1]=='1' or (s[i-1]=='2' and v in '0123456'):
                        dp[i+1]+=dp[i-1]
        return dp[-1]
                    
                
