
 

Example:

Vector2D iterator = new Vector2D([[1,2],[3],[4]]);

iterator.next(); // return 1
iterator.next(); // return 2
iterator.next(); // return 3
iterator.hasNext(); // return true
iterator.hasNext(); // return true
iterator.next(); // return 4
iterator.hasNext(); // return false



class Vector2D(object):

    def __init__(self, v):
        """
        :type v: List[List[int]]
        """
        def iterator1():
            for row in v:
                for col in row:
                    self.size-=1
                    yield col
        self.myiterator=iterator1()
        self.size = sum(len(line) for line in v)

        

    def next(self):
        """
        :rtype: int
        """
        return next(self.myiterator)

    def hasNext(self):
        """
        :rtype: bool
        """
        return (self.size)
        


# Your Vector2D object will be instantiated and called as such:
# obj = Vector2D(v)
# param_1 = obj.next()
# param_2 = obj.hasNext()
