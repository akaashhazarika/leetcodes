43. Multiply Strings
Medium

1059

481

Favorite

Share
Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.

Example 1:

Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:

Input: num1 = "123", num2 = "456"
Output: "56088"
Note:

The length of both num1 and num2 is < 110.
Both num1 and num2 contain only digits 0-9.
Both num1 and num2 do not contain any leading zero, except the number 0 itself.
You must not use any built-in BigInteger library or convert the inputs to integer directly.


class Solution(object):
    def multiply(self, num1, num2):
        """
        :type num1: str
        :type num2: str
        :rtype: str
        """
        result=[0]*(len(num1)+len(num2))
        n1 = [int(i) for i in num1][::-1]
        n2 = [int(i) for i in num2][::-1]
        for i1,v1 in enumerate(n1):
            for i2,v2 in enumerate(n2):
                result[i1+i2]+=v1*v2
        for i in range(len(result)-1):
            result[i+1]+=result[i]/10
            result[i]=result[i]%10
        print(result)
        for i in range(len(result)-1,-1,-1):
            if result[i]:
                return ''.join(str(k) for k in reversed(result[:i+1]))
        return '0'
