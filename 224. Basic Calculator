Hard

Implement a basic calculator to evaluate a simple expression string.

The expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .

Example 1:

Input: "1 + 1"
Output: 2
Example 2:

Input: " 2-1 + 2 "
Output: 3
Example 3:

Input: "(1+(4+5+2)-3)+(6+8)"
Output: 23
Note:
You may assume that the given expression is always valid.
Do not use the eval built-in library function.



import re
class Solution:
    def calculate(self, s: str) -> int:
        sign,result,num=1,0,0
        stack=[]
        for v in s:
            if v.isdigit():
                num=num*10+int(v)
            elif v=='+':
                result+=(sign*num)
                sign=1
                num=0
            elif v=='-':
                result+=(sign*num)
                sign=-1
                num=0
            elif v=='(':
                stack.append(result)
                stack.append(sign)
                sign=1
                result=0
            elif v==')':
                result+=(sign*num)
                num=0
                result*=stack.pop()
                result+=stack.pop()
        if num:
            return result+sign*num
        else:
            return result
        
                
                
