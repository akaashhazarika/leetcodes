763. Partition Labels
Medium

1314

72

Favorite

Share
A string S of lowercase letters is given. We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.

Example 1:
Input: S = "ababcbacadefegdehijhklij"
Output: [9,7,8]
Explanation:
The partition is "ababcbaca", "defegde", "hijhklij".
This is a partition so that each letter appears in at most one part.
A partition like "ababcbacadefegde", "hijhklij" is incorrect, because it splits S into less parts.
Note:

S will have length in range [1, 500].
S will consist of lowercase letters ('a' to 'z') only.


class Solution:
    def partitionLabels(self, S: str) -> List[int]:
        last = {ch:index for index,ch in enumerate(S)}
        n = 0
        results = []
        past = -1
        for i,c in enumerate(S):
            n = max(n,last[c])
            if n==i:
                results.append(i-past)
                past = i
        return results
                
