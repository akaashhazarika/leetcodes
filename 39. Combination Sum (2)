39. Combination Sum
Medium

2547

78

Favorite

Share
Given a set of candidate numbers (candidates) (without duplicates) and a target number (target), find all unique combinations in candidates where the candidate numbers sums to target.

The same repeated number may be chosen from candidates unlimited number of times.

Note:

All numbers (including target) will be positive integers.
The solution set must not contain duplicate combinations.
Example 1:

Input: candidates = [2,3,6,7], target = 7,
A solution set is:
[
  [7],
  [2,2,3]
]
Example 2:

Input: candidates = [2,3,5], target = 8,
A solution set is:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]

class Solution(object):
    def helper(self,target,index,candidates,path,res):
        if index==len(candidates):
            if target==0:
                res.append(path[:])
        else:
            if target==0:
                res.append(path[:])
            elif target<0:
                pass
            else:
                val = candidates[index]
                count = 0
                while count*val<=target:
                    temp = [val]*count
                    self.helper(target-count*val,index+1,candidates,path+temp,res)
                    count+=1
            
    def combinationSum(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        self.res = []
        self.helper(target,0,candidates,[],self.res)
        return self.res
        
