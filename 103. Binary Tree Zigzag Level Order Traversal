103. Binary Tree Zigzag Level Order Traversal
Medium

1357

74

Favorite

Share
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
  
  
  # Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
import copy
class Solution:
    def zigzagLevelOrder(self, root: TreeNode) -> List[List[int]]:
        s1,s2 = [],[]
        s1 = [root]
        flag = 1
        results = []
        if not root:
            return []
        while s1:
            curr = []
            s2 = []
            while s1:
                element = s1.pop()
                curr.append(element.val)
                if flag==1:
                    if element.left:
                        s2.append(element.left)
                    if element.right:
                        s2.append(element.right)
                else:
                    if element.right:
                        s2.append(element.right)
                    if element.left:
                        s2.append(element.left)
            s1 = list(s2)
            results.append(curr)
            flag = flag^1
        return results
