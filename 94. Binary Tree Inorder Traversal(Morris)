94. Binary Tree Inorder Traversal
Medium

1728

72

Favorite

Share
Given a binary tree, return the inorder traversal of its nodes' values.

Example:

Input: [1,null,2,3]
   1
    \
     2
    /
   3

Output: [1,3,2]
Follow up: Recursive solution is trivial, could you do it iteratively?



# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def inorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        res = []
        while root:
            if root.left==None:
                res.append(root.val)
                root = root.right
            else:
                anc = root.left
                while anc.right!=None and anc.right!=root: 
                    anc = anc.right
                if anc.right ==None:
                    anc.right = root
                    root = root.left
                else:
                    anc.right = None
                    res.append(root.val)
                    root = root.right
        return res
        
