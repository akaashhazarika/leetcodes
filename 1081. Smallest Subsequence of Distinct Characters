1081. Smallest Subsequence of Distinct Characters
Medium

185

36

Favorite

Share
Return the lexicographically smallest subsequence of text that contains all the distinct characters of text exactly once.

 

Example 1:

Input: "cdadabcc"
Output: "adbc"
Example 2:

Input: "abcd"
Output: "abcd"
Example 3:

Input: "ecbacba"
Output: "eacb"
Example 4:

Input: "leetcode"
Output: "letcod"
 

Note:

1 <= text.length <= 1000
text consists of lowercase English letters.
 
 
 class Solution(object):
    def smallestSubsequence(self, text):
        """
        :type text: str
        :rtype: str
        """
        last_occurence = {c:i for i,c in enumerate(text)}
        stack = []
        for i,c in enumerate(text):
            if c in stack:
                continue
            while stack and stack[-1]>c and last_occurence[stack[-1]]>i:
                stack.pop()
            stack+=c,
        return ''.join(stack)
